---
import "animate.css";

interface Props {
  img: string;
  color: string;
  name: string;
  level: "Baja" | "Media" | "Alta" | number;
}

const { img, color, name, level } = Astro.props;

function getColorWithOpacity(color: string, opacity: number) {
  if (color.startsWith("#")) {
    const bigint = parseInt(color.slice(1), 16);
    const r = (bigint >> 16) & 255;
    const g = (bigint >> 8) & 255;
    const b = bigint & 255;
    return `rgba(${r}, ${g}, ${b}, ${opacity})`;
  }
  return color;
}

function getGlowColor(color: string, opacity: number = 0.6) {
  if (color.startsWith("#")) {
    const bigint = parseInt(color.slice(1), 16);
    const r = (bigint >> 16) & 255;
    const g = (bigint >> 8) & 255;
    const b = bigint & 255;
    return `rgba(${r}, ${g}, ${b}, ${opacity})`;
  }
  return `rgba(255, 255, 255, ${opacity})`;
}

const glowColor = getGlowColor(color);
const backgroundColor = getColorWithOpacity(color, 0.6);
---

<li class="w-full flex flex-col gap-2 my-6 pr-18">
  <div class="flex items-center gap-4">
    <img src={img} alt={name} class="w-8 h-8 object-contain" />
    <span class="font-mono text-sm text-white">{name}</span>
  </div>

  <div class="w-full h-4 bg-gray-800 rounded-full overflow-hidden">
    <div
      class="h-full transition-all duration-500 rounded-full"
      style={`width: ${
        typeof level === "number"
          ? level + "%"
          : level === "Alta"
            ? "90%"
            : level === "Media"
              ? "60%"
              : "30%"
      }; background-color: ${glowColor};`}
    >
    </div>
  </div>
</li>

<style>
  .pulsate-bck {
    animation: pulsate-bck 2s ease-in-out infinite both;
  }

  @keyframes pulsate-bck {
    0% {
      transform: scale(1);
      box-shadow: 0 0 10px var(--glow-color);
    }
    50% {
      transform: scale(1.05);
      box-shadow: 0 0 20px var(--glow-color-stronger);
    }
    100% {
      transform: scale(1);
      box-shadow: 0 0 10px var(--glow-color);
    }
  }

  .tooltip {
    transition: opacity 0.3s ease;
  }
</style>
